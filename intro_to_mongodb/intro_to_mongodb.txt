Assignment:  Intro to MongoDB
Karen Clark
2018-09-01

1. Create a database called 'my_first_db'.
> use my_first_db

2. Create students collection.
> db.students.insertOne({name: "John Doe", home_state: "California", lucky_number: 17, birthday: {month: 07, day: 31, year: 1993}})

3. Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
(see #2 above)

4. Create 5 students with the appropriate info.
John Doe from #2 above, plus:
> db.students.insertOne({name: "Armin Shah", home_state: "Pennsylvania", lucky_number: 9, birthday: {month: 01, day: 12, year: 1988}})
> db.students.insertOne({name: "Lucy Li", home_state: "Washington", lucky_number: 2, birthday: {month: 11, day: 22, year: 2000}})
> db.students.insertOne({name: "George Brown", home_state: "Florida", lucky_number: 7, birthday: {month: 10, day: 30, year: 1989}})
> db.students.insertOne({name: "Maria Sanchez", home_state: "California", lucky_number: 23, birthday: {month: 10, day: 02, year: 1991}})

5. Get all students.
> db.students.find()
    { "_id" : ObjectId("5b8ad885a4973170130d3d47"), "name" : "John Doe", "home_state" : "California", "lucky_number" : 17, "birthday" : { "month" : 7, "day" : 31, "year" : 1993 } }
    { "_id" : ObjectId("5b8ad8d2a4973170130d3d48"), "name" : "Armin Shah", "home_state" : "Pennsylvania", "lucky_number" : 9, "birthday" : { "month" : 1, "day" : 12, "year" : 1988 } }
    { "_id" : ObjectId("5b8ad8f4a4973170130d3d49"), "name" : "Lucy Li", "home_state" : "Washington", "lucky_number" : 2, "birthday" : { "month" : 11, "day" : 22, "year" : 2000 } }
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "home_state" : "Florida", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 30, "year" : 1989 } }
    { "_id" : ObjectId("5b8ad94ea4973170130d3d4b"), "name" : "Maria Sanchez", "home_state" : "California", "lucky_number" : 23, "birthday" : { "month" : 10, "day" : 2, "year" : 1991 } }

6. Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
> db.students.find({$or: [{home_state: "California"}, {home_state: "Washington"}]})
    { "_id" : ObjectId("5b8ad885a4973170130d3d47"), "name" : "John Doe", "home_state" : "California", "lucky_number" : 17, "birthday" : { "month" : 7, "day" : 31, "year" : 1993 } }
    { "_id" : ObjectId("5b8ad8f4a4973170130d3d49"), "name" : "Lucy Li", "home_state" : "Washington", "lucky_number" : 2, "birthday" : { "month" : 11, "day" : 22, "year" : 2000 } }
    { "_id" : ObjectId("5b8ad94ea4973170130d3d4b"), "name" : "Maria Sanchez", "home_state" : "California", "lucky_number" : 23, "birthday" : { "month" : 10, "day" : 2, "year" : 1991 } }

7. Get all students whose lucky number is:
a. greater than 3
> db.students.find({lucky_number : {$gt: 3}}, {name: 1, lucky_number: 1})
    { "_id" : ObjectId("5b8ad885a4973170130d3d47"), "name" : "John Doe", "lucky_number" : 17 }
    { "_id" : ObjectId("5b8ad8d2a4973170130d3d48"), "name" : "Armin Shah", "lucky_number" : 9 }
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "lucky_number" : 7 }
    { "_id" : ObjectId("5b8ad94ea4973170130d3d4b"), "name" : "Maria Sanchez", "lucky_number" : 23 }

b. less than or equal to 10
> db.students.find({lucky_number : {$lte: 10}}, {name: 1, lucky_number: 1})
    { "_id" : ObjectId("5b8ad8d2a4973170130d3d48"), "name" : "Armin Shah", "lucky_number" : 9 }
    { "_id" : ObjectId("5b8ad8f4a4973170130d3d49"), "name" : "Lucy Li", "lucky_number" : 2 }
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "lucky_number" : 7 }

c. between 1 and 9 (inclusive)
> db.students.find({$and: [{lucky_number : {$gte: 1}}, {lucky_number: {$lte: 9}}] }, {name: 1, lucky_number: 1})
    { "_id" : ObjectId("5b8ad8d2a4973170130d3d48"), "name" : "Armin Shah", "lucky_number" : 9 }
    { "_id" : ObjectId("5b8ad8f4a4973170130d3d49"), "name" : "Lucy Li", "lucky_number" : 2 }
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "lucky_number" : 7 }

8. Add a field to each student collection called 'interests' that is an ARRAY.  
It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
> db.students.update({}, {$set: { "interests": ["coding", "brunch", "MongoDB"]}}, false, true)

9. Add some unique interests for each particular student into each of their interest arrays.
> db.students.find({}, {name: 1, interests: 1})
    { "_id" : ObjectId("5b8ad885a4973170130d3d47"), "name" : "John Doe", "interests" : [ "coding", "brunch", "MongoDB", "sewing", "javascript" ] }
    { "_id" : ObjectId("5b8ad8d2a4973170130d3d48"), "name" : "Armin Shah", "interests" : [ "coding", "brunch", "MongoDB" ] }
    { "_id" : ObjectId("5b8ad8f4a4973170130d3d49"), "name" : "Lucy Li", "interests" : [ "coding", "brunch", "MongoDB", "boxing" ] }
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "interests" : [ "coding", "brunch", "MongoDB", "fishing" ] }
    { "_id" : ObjectId("5b8ad94ea4973170130d3d4b"), "name" : "Maria Sanchez", "interests" : [ "coding", "brunch", "MongoDB", "javascript" ] }

10. Add the interest 'taxes' into someone's interest array.
> db.students.update({name: "Lucy Li"}, {$push: {interests: "taxes"}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.find({name: "Lucy Li" }, {name: 1, interests: 1})
    { "_id" : ObjectId("5b8ad8f4a4973170130d3d49"), "name" : "Lucy Li", "interests" : [ "coding", "brunch", "MongoDB", "boxing", "taxes" ] }

11. Remove the 'taxes' interest you just added.
> db.students.update({name: "Lucy Li"}, {$pop: {interests: 1}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.find({name: "Lucy Li" }, {name: 1, interests: 1})
    { "_id" : ObjectId("5b8ad8f4a4973170130d3d49"), "name" : "Lucy Li", "interests" : [ "coding", "brunch", "MongoDB", "boxing" ] }

12. Remove all students who are from California (or Washington).
> db.students.deleteMany({$or: [{home_state: "California"}, {home_state: "Washington"}]})
    { "acknowledged" : true, "deletedCount" : 3 }
> db.students.find()
    { "_id" : ObjectId("5b8ad8d2a4973170130d3d48"), "name" : "Armin Shah", "home_state" : "Pennsylvania", "lucky_number" : 9, "birthday" : { "month" : 1, "day" : 12, "year" : 1988 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "home_state" : "Florida", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 30, "year" : 1989 }, "interests" : [ "coding", "brunch", "MongoDB", "fishing" ] }

13. Remove a student by name. 
> db.students.deleteOne({name: "Armin Shah"})
    { "acknowledged" : true, "deletedCount" : 1 }
> db.students.find()
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "home_state" : "Florida", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 30, "year" : 1989 }, "interests" : [ "coding", "brunch", "MongoDB", "fishing" ] }

14. Remove a student whose lucky number is greater than 5 (JUST ONE)
(at this point I only HAVE one student left. I'm bringing back the California people in a different home_state so I have sone students to work with!)
> db.students.find()
    { "_id" : ObjectId("5b8ad937a4973170130d3d4a"), "name" : "George Brown", "home_state" : "Florida", "lucky_number" : 7, "birthday" : { "month" : 10, "day" : 30, "year" : 1989 }, "interests" : [ "coding", "brunch", "MongoDB", "fishing" ] }
    { "_id" : ObjectId("5b8ae84ca4973170130d3d4c"), "name" : "Maria Sanchez", "home_state" : "Nevada", "lucky_number" : 23, "birthday" : { "month" : 10, "day" : 2, "year" : 1991 } }
    { "_id" : ObjectId("5b8ae863a4973170130d3d4d"), "name" : "John Doe", "home_state" : "Montana", "lucky_number" : 17, "birthday" : { "month" : 7, "day" : 31, "year" : 1993 } }
> db.students.deleteOne({lucky_number: {$gt: 5}})
    { "acknowledged" : true, "deletedCount" : 1 }
> db.students.find()
    { "_id" : ObjectId("5b8ae84ca4973170130d3d4c"), "name" : "Maria Sanchez", "home_state" : "Nevada", "lucky_number" : 23, "birthday" : { "month" : 10, "day" : 2, "year" : 1991 } }
    { "_id" : ObjectId("5b8ae863a4973170130d3d4d"), "name" : "John Doe", "home_state" : "Montana", "lucky_number" : 17, "birthday" : { "month" : 7, "day" : 31, "year" : 1993 } }

15. Add a field to each student collection called 'number_of_belts' and set it to 0.


16. Increment this field by 1 for all students in Washington (Seattle Dojo).
17. Rename the 'number_of_belts' field to 'belts_earned'
18. Remove the 'lucky_number' field.
19. Add a 'updated_on' field, and set the value as the current date.